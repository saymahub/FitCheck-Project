services:
  server:
    build:
      args:
        - NODE_ENV=development
      context: server
      target: development
    command: npm start
    environment:
      DATABASE_DB: ${DB}
      DATABASE_USER: ${DB_ROOT_USER}
      DATABASE_PASSWORD: ${DB_ROOT_PASSWORD}
      DATABASE_HOST: db
      NODE_ENV: development
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ./server/package.json:/code/package.json
      - ./server/package-lock.json:/code/package-lock.json
      - back-notused:/opt/app/node_modules
      - ./server:/code
      - /code/node_modules
    networks:
      - public
      - private
    depends_on:
      db:
        condition: service_healthy
  db:
    build:
      context: .
      dockerfile: Dockerfile-db
    # We use a mariadb image which supports both amd64 & arm64 architecture
    # image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    # image: mysql:8.0.27
    # command: "--default-authentication-plugin=mysql_native_password"
    container_name: db
    restart: always
    volumes:
      - db-data:/var/lib/mysql
      # - ./my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - private
    environment:
      MYSQL_DATABASE: ${DB}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
      interval: 20s
      timeout: 60s
      retries: 15
  client:
    build:
      context: client
      target: development
    environment:
      - WATCHPACK_POLLING=true
    ports:
      - 3000:3000
    volumes:
      - ./client/src:/code/src
      - /client/node_modules
    networks:
      - public
    depends_on:
      - server
networks:
  public:
  private:
volumes:
  back-notused:
  db-data:
